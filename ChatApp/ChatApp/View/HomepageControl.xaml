<UserControl
  x:Class="ChatApp.View.HomepageControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converter="clr-namespace:ChatApp.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
  xmlns:local="clr-namespace:ChatApp.View"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:model="clr-namespace:ChatApp.Model"
  d:DesignHeight="800"
  d:DesignWidth="400"
  mc:Ignorable="d">

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <converter:NameConverter x:Key="NameConverter" />

      <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
      </Style>

      <Style
        x:Key="placeHolder"
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBox}">
              <Grid>
                <TextBox
                  x:Name="textSource"
                  Panel.ZIndex="2"
                  Background="Transparent"
                  Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <TextBox
                  Panel.ZIndex="1"
                  Background="{TemplateBinding Background}"
                  Text="{TemplateBinding Tag}">
                  <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                      <Setter Property="Foreground" Value="Transparent" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                          <Setter Property="Foreground" Value="White" />
                          <Setter Property="HorizontalContentAlignment" Value="Left" />
                          <Setter Property="VerticalContentAlignment" Value="Center" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBox.Style>
                </TextBox>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid Margin="7,0,7,7" Background="#76246E">
    <Grid Background="#76246E">
      <!--<Grid.Background>
        <ImageBrush ImageSource="../Resources/shadow.png" Opacity="0.4" />
      </Grid.Background>-->
      <Grid.RowDefinitions>
        <RowDefinition Height="auto" />
        <RowDefinition Height="auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="auto" />
      </Grid.RowDefinitions>

      <DockPanel Margin="0">
        <Menu Background="Transparent" DockPanel.Dock="Top">

          <MenuItem Foreground="White" Header="_Messenger">
            <MenuItem Foreground="Black" Header="_New">
              <MenuItem.Icon>
                <materialDesign:PackIcon Kind="OpenInNew" />
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Foreground="Black" Header="_Open">
              <MenuItem.Icon>
                <materialDesign:PackIcon Kind="MenuOpen" />
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Foreground="Black" Header="_Save">
              <MenuItem.Icon>
                <materialDesign:PackIcon Kind="ContentSave" />
              </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Foreground="Black" Header="_Exit">
              <MenuItem.Icon>
                <materialDesign:PackIcon Kind="ExitRun" />
              </MenuItem.Icon>
            </MenuItem>
          </MenuItem>

          <MenuItem Foreground="White" Header="_Contacts" />

          <MenuItem Foreground="White" Header="_Actions" />

          <MenuItem Foreground="White" Header="_View" />
        </Menu>

      </DockPanel>

      <Grid Grid.Row="1">
        <Grid.RowDefinitions>
          <RowDefinition />
          <RowDefinition />
          <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="auto" />
          <ColumnDefinition Width="auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Button
          x:Name="ProfileImage"
          Grid.RowSpan="3"
          Grid.Column="0"
          Width="55"
          Height="55"
          Margin="5,10,5,0"
          HorizontalAlignment="Left"
          Background="Transparent"
          MouseEnter="Button_MouseEnter">
          <StackPanel>
            <Image
              x:Name="ProfilePicture"
              Width="50"
              Height="50"
              Source="{Binding ProfilePicturePath}" />
          </StackPanel>

        </Button>
        <Popup
          x:Name="ProfilePicturePopupTooltip"
          MouseLeave="Tooltip_MouseLeave"
          Placement="Left"
          PlacementTarget="{Binding ElementName=ProfileImage}">
          <StackPanel>
            <local:ChangeProfilePictureControl x:Name="ChangeProfilePictureControl" />
          </StackPanel>
        </Popup>

        <Button
          Grid.Row="0"
          Grid.Column="1"
          Height="12"
          Margin="5,10,0,0"
          HorizontalAlignment="Left"
          Background="Transparent"
          BorderThickness="0"
          Style="{StaticResource MaterialDesignRaisedAccentButton}">

          <StackPanel Margin="-5" Orientation="Horizontal">
            <Image
              Width="10"
              Height="10"
              Margin="-10,0,0,0"
              Source="{Binding IsActiveImagePath}" />
            <Label
              Margin="0,-9"
              Content="{Binding Email}"
              FontSize="12"
              Foreground="White" />
          </StackPanel>
        </Button>

        <!--<Label
        Grid.Row="0"
        Grid.Column="2"
        Margin="-10,2,5,0"
        HorizontalAlignment="Left"
        Content="{Binding Email}"
        FontSize="10"
        Foreground="White" />-->
        <TextBox
          Name="EmailTextBox"
          Grid.Row="1"
          Grid.Column="1"
          Grid.ColumnSpan="2"
          Height="19"
          Margin="5,0,5,0"
          Padding="5,0,5,0"
          HorizontalAlignment="Stretch"
          HorizontalContentAlignment="Left"
          VerticalContentAlignment="Center"
          Panel.ZIndex="0"
          BorderBrush="LightGray"
          BorderThickness="1"
          FontFamily="SegoeUI"
          FontSize="12"
          Foreground="LightGray"
          Text="{Binding Status, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}">

          <TextBox.Style>
            <Style xmlns:sys="clr-namespace:System;assembly=mscorlib" TargetType="TextBox">
              <Style.Resources>

                <VisualBrush
                  x:Key="GrayHelperTextBrush"
                  AlignmentX="Left"
                  AlignmentY="Center"
                  Stretch="None">
                  <VisualBrush.Visual>
                    <Label
                      Name="SearchLabel"
                      BorderBrush="LightGray"
                      Content="Have something to share?"
                      FontFamily="SegoeUI"
                      FontSize="12"
                      Foreground="LightGray" />
                  </VisualBrush.Visual>
                </VisualBrush>

                <VisualBrush
                  x:Key="BlackHelperTextBrush"
                  AlignmentX="Left"
                  AlignmentY="Center"
                  Stretch="None">
                  <VisualBrush.Visual>
                    <Label
                      Name="SearchBlackLabel"
                      Content="Have something to share?"
                      FontFamily="SegoeUI"
                      FontSize="12"
                      Foreground="DeepSkyBlue" />
                  </VisualBrush.Visual>
                </VisualBrush>

              </Style.Resources>
              <Style.Triggers>

                <Trigger Property="IsKeyboardFocused" Value="True">
                  <Setter Property="Background" Value="Transparent" />
                </Trigger>

                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="Text" Value="{x:Null}" />
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsMouseCaptured" Value="False" />
                    <Condition Property="IsFocused" Value="False" />
                  </MultiTrigger.Conditions>
                  <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource GrayHelperTextBrush}" />
                  </MultiTrigger.Setters>
                </MultiTrigger>

                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="Text" Value="{x:Static sys:String.Empty}" />
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsMouseCaptured" Value="False" />
                    <Condition Property="IsFocused" Value="False" />
                  </MultiTrigger.Conditions>
                  <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource GrayHelperTextBrush}" />
                  </MultiTrigger.Setters>
                </MultiTrigger>

                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="Text" Value="{x:Null}" />
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                  </MultiTrigger.Conditions>
                  <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource BlackHelperTextBrush}" />
                  </MultiTrigger.Setters>
                </MultiTrigger>

                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="Text" Value="{x:Static sys:String.Empty}" />
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                  </MultiTrigger.Conditions>
                  <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource BlackHelperTextBrush}" />
                  </MultiTrigger.Setters>
                </MultiTrigger>

              </Style.Triggers>
            </Style>
          </TextBox.Style>
        </TextBox>
        <!--<TextBox
                x:Name="Email"
                Grid.Row="1"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                Height="19"
                Margin="5,0,5,0"
                Padding="5,0,5,0"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Left"
                VerticalContentAlignment="Center"
                Background="#CC85BC"
                FontSize="10"
                Foreground="Black"
                Style="{StaticResource placeHolder}"
                Tag="Have something to share?"
                TextWrapping="NoWrap">-->

        <!--<materialDesign:HintAssist.Hint>
                    <TextBlock Margin="0" Foreground="White">Have something to share?</TextBlock>
                </materialDesign:HintAssist.Hint>

            </TextBox>-->
        <Button
          Grid.Row="1"
          Grid.Column="2"
          Grid.ColumnSpan="1"
          Width="20"
          Height="20"
          Margin="5,0"
          HorizontalAlignment="Right"
          Background="Transparent" />


        <Image
          Grid.Row="2"
          Grid.Column="1"
          Width="10"
          Height="10"
          Margin="5,0,10,0"
          HorizontalAlignment="Left"
          Source="pack://application:,,,/ChatApp;component/Resources/Phone.png" />

        <Button
          Grid.Row="2"
          Grid.Column="1"
          Margin="20,0,0,0"
          HorizontalAlignment="Left"
          VerticalAlignment="Center"
          Background="Transparent"
          BorderThickness="0"
          Content="RM! Voice"
          Cursor="Hand"
          FontFamily="SegoeUI"
          FontSize="10"
          Foreground="White">

          <Button.Template>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border>
                <Grid>
                  <ContentPresenter />
                  <Grid
                    x:Name="StatusPanel"
                    Background="Black"
                    Opacity="0" />
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                  <Setter TargetName="StatusPanel" Property="Opacity" Value="0.1" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                  <Setter TargetName="StatusPanel" Property="Opacity" Value="0.3" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Button.Template>
        </Button>

        <!--<Button
        Grid.Row="2"
        Grid.Column="3"
        Margin="5,0,5,0"
        HorizontalAlignment="Right"
        VerticalAlignment="Center"
        Background="Transparent"
        BorderThickness="0"
        Content="Games"
        Cursor="Hand"
        FontFamily="SegoeUI"
        FontSize="11"
        Foreground="White">

        <Button.Template>
          <ControlTemplate TargetType="{x:Type Button}">

            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="StatusPanel" Property="Opacity" Value="0.1" />
              </Trigger>
              <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="StatusPanel" Property="Opacity" Value="0.3" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Button.Template>
      </Button>-->


        <StackPanel
          Grid.Row="2"
          Grid.Column="3"
          Margin="5,0,5,0"
          HorizontalAlignment="Right"
          Orientation="Horizontal">
          <Image
            Width="10"
            Height="10"
            Source="pack://application:,,,/ChatApp;component/Resources/games.png" />
          <Label
            VerticalAlignment="Center"
            FontSize="10"
            Foreground="White">
            Games
          </Label>
        </StackPanel>

      </Grid>

      <!--<Button
                Grid.Row="0"
                Grid.Column="0"
                Margin="20,10,10,0"
                HorizontalContentAlignment="Left"
                Content="Rodica Mihaela"
                Foreground="White" />-->
      <!--<Border
                Grid.Row="1"
                Grid.Column="0"
                Margin="20,10,10,0"
                Background="White"
                BorderBrush="#1E98F7"
                BorderThickness="1">
                <ListBox
                    VerticalAlignment="Top"
                    ItemsSource="{Binding MessagesList, Mode=OneWay}"
                    ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="OverridesDefaultStyle" Value="true" />
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid
                                            Width="400"
                                            Margin="10"
                                            HorizontalAlignment="{Binding HorizontalAlignment, Converter={StaticResource AlignmentConverter}}">
                                            <Rectangle
                                                Fill="AliceBlue"
                                                RadiusX="10"
                                                RadiusY="10"
                                                Stroke="#1E98F7"
                                                StrokeThickness="1" />
                                            <TextBlock
                                                Margin="5"
                                                Text="{Binding Content}"
                                                TextWrapping="Wrap" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                </ListBox>
            </Border>-->


      <!--<Button
      Margin="10,10,10,0"
      Content="{Binding WelcomeText}"
      Foreground="White" />-->

      <!--<TabControl Grid.Row="2" Foreground="#782370" Margin="10,10,10,0">
      <TabItem Header="Tab A" Background="Blue" Foreground="Red">
        <Grid />
      </TabItem>

      <TabItem Header="Tab B" Background="Green" Foreground="Navy" >
        <Grid />
      </TabItem>

      <TabItem Header="Tab C" Background="LightBlue">
        <Grid />
      </TabItem>
    </TabControl>-->

      <dragablz:TabablzControl
        Grid.Row="2"
        Margin="10,10,10,0"
        Style="{StaticResource TabControlStyle}">
        <TabItem Margin="20" HorizontalAlignment="Center">
          <TabItem.Header>
            <TextBlock
              Margin="10,0"
              Text="Contacts" />
          </TabItem.Header>

          <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">
            <DockPanel
              HorizontalAlignment="Stretch"
              Background="#3E0C3A">
              <!--<StackPanel.Background>
                <ImageBrush ImageSource="pack://application:,,,/ChatApp;component/Resources/banner.png" />
              </StackPanel.Background>-->
              <Button
                HorizontalAlignment="Left"
                Background="Transparent"
                BorderThickness="0">
                <Image Height="20" Source="pack://application:,,,/ChatApp;component/Resources/AddFriend.png" />
              </Button>
              <Button
                HorizontalAlignment="Left"
                Background="Transparent"
                BorderThickness="0">
                <Image Height="20" Source="pack://application:,,,/ChatApp;component/Resources/GridIcon.png" />
              </Button>
              <TextBox
                Margin="1"
                Padding="5,0,5,0"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Left"
                VerticalContentAlignment="Center"
                Panel.ZIndex="0"
                Background="White"
                BorderBrush="LightGray"
                BorderThickness="1"
                FontFamily="SegoeUI"
                FontSize="12"
                Foreground="Black"
                Text="{Binding Status, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}">

                <TextBox.Style>
                  <Style xmlns:sys="clr-namespace:System;assembly=mscorlib" TargetType="TextBox">
                    <Style.Resources>

                      <VisualBrush
                        x:Key="GrayHelperTextBrush"
                        AlignmentX="Left"
                        AlignmentY="Center"
                        Stretch="None">
                        <VisualBrush.Visual>
                          <Label
                            Name="SearchLabel"
                            BorderBrush="LightGray"
                            Content="Have something to share?"
                            FontFamily="SegoeUI"
                            FontSize="12"
                            Foreground="LightGray" />
                        </VisualBrush.Visual>
                      </VisualBrush>

                      <VisualBrush
                        x:Key="BlackHelperTextBrush"
                        AlignmentX="Left"
                        AlignmentY="Center"
                        Stretch="None">
                        <VisualBrush.Visual>
                          <Label
                            Name="SearchBlackLabel"
                            Content="Have something to share?"
                            FontFamily="SegoeUI"
                            FontSize="12"
                            Foreground="DeepSkyBlue" />
                        </VisualBrush.Visual>
                      </VisualBrush>

                    </Style.Resources>
                    <Style.Triggers>

                      <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="Background" Value="White" />
                      </Trigger>

                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="Text" Value="{x:Null}" />
                          <Condition Property="IsMouseOver" Value="False" />
                          <Condition Property="IsMouseCaptured" Value="False" />
                          <Condition Property="IsFocused" Value="False" />
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                          <Setter Property="Background" Value="{StaticResource GrayHelperTextBrush}" />
                        </MultiTrigger.Setters>
                      </MultiTrigger>

                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="Text" Value="{x:Static sys:String.Empty}" />
                          <Condition Property="IsMouseOver" Value="False" />
                          <Condition Property="IsMouseCaptured" Value="False" />
                          <Condition Property="IsFocused" Value="False" />
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                          <Setter Property="Background" Value="{StaticResource GrayHelperTextBrush}" />
                        </MultiTrigger.Setters>
                      </MultiTrigger>

                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="Text" Value="{x:Null}" />
                          <Condition Property="IsMouseOver" Value="True" />
                          <Condition Property="IsFocused" Value="False" />
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                          <Setter Property="Background" Value="{StaticResource BlackHelperTextBrush}" />
                        </MultiTrigger.Setters>
                      </MultiTrigger>

                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="Text" Value="{x:Static sys:String.Empty}" />
                          <Condition Property="IsMouseOver" Value="True" />
                          <Condition Property="IsFocused" Value="False" />
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                          <Setter Property="Background" Value="{StaticResource BlackHelperTextBrush}" />
                        </MultiTrigger.Setters>
                      </MultiTrigger>

                    </Style.Triggers>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </DockPanel>
            <Expander
              x:Name="RecentContacts"
              ExpandDirection="Right"
              FontWeight="Bold"
              Foreground="Indigo"
              IsExpanded="True">
              <Expander.Header>
                <StackPanel Orientation="Horizontal">
                  <Image
                    Name="img"
                    Width="auto"
                    Height="auto"
                    Source="pack://application:,,,/ChatApp;component/Resources/RecentContact_Icon.png" />
                  <TextBlock
                    Margin="7,0,0,0"
                    VerticalAlignment="Center"
                    Text="{Binding RecentContactsListName}" />
                </StackPanel>
              </Expander.Header>
              <Expander.Resources>
                <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="White" />
                <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="White" />
                <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="Gray" />
                <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="White" />
                <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="White" />
                <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="Gray" />
                <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="White" />
                <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="White" />
                <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="Gray" />
                <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="White" />
                <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="White" />
                <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="Gray" />
                <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                          <Grid Background="White" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="Auto" />
                              <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                              <Grid.LayoutTransform>
                                <TransformGroup>
                                  <TransformGroup.Children>
                                    <TransformCollection>
                                      <RotateTransform Angle="-90" />
                                    </TransformCollection>
                                  </TransformGroup.Children>
                                </TransformGroup>
                              </Grid.LayoutTransform>
                              <Ellipse
                                x:Name="circle"
                                Width="19"
                                Height="19"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{StaticResource Expander.Static.Circle.Fill}"
                                Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                              <Path
                                x:Name="arrow"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M -2,1.5 L -0.5,4 L 1,1.5 Z"
                                SnapsToDevicePixels="false"
                                Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                StrokeThickness="3" />
                            </Grid>
                            <ContentPresenter
                              Grid.Column="1"
                              Margin="4,4,0,0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="True" />
                          </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M -0.5,1.5 L -2.5,2.75 L -0.5, 4 Z" />
                          </Trigger>
                          <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                          </Trigger>
                          <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                          </Trigger>
                          <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                          </Trigger>-->
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Expander.Resources>

              <Expander.Template>
                <ControlTemplate TargetType="{x:Type Expander}">
                  <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3"
                    SnapsToDevicePixels="true">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <ToggleButton
                        x:Name="HeaderSite"
                        MinWidth="0"
                        MinHeight="0"
                        Margin="1"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="Left"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource ExpanderRightHeaderStyle}">
                        <ToggleButton.FocusVisualStyle>
                          <Style>
                            <Setter Property="Control.Template">
                              <Setter.Value>
                                <ControlTemplate>
                                  <Border>
                                    <Rectangle
                                      Margin="0"
                                      SnapsToDevicePixels="true"
                                      Stroke="Black"
                                      StrokeDashArray="1 2"
                                      StrokeThickness="1" />
                                  </Border>
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </Style>
                        </ToggleButton.FocusVisualStyle>
                      </ToggleButton>
                      <ContentPresenter
                        x:Name="ExpandSite"
                        Grid.Row="1"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="false"
                        Visibility="Collapsed" />
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsExpanded" Value="true">
                      <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Expander.Template>
              <ListBox
                MaxHeight="400"
                Margin="20,0,10,0"
                VerticalAlignment="Top"
                BorderThickness="0"
                ItemsSource="{Binding RecentContactsList}">
                <ListBox.ItemTemplate>
                  <DataTemplate DataType="{x:Type model:ContactsListingModel}">
                    <StackPanel Orientation="Horizontal">
                      <Image
                        Width="30"
                        Height="30"
                        Source="{Binding ImagePath}" />
                      <TextBlock
                        Margin="5"
                        Text="{Binding Name}"
                        TextAlignment="Center" />
                    </StackPanel>
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
            </Expander>

            <Expander
              x:Name="AddressBook"
              ExpandDirection="Right"
              FontWeight="Bold"
              Foreground="Indigo"
              IsExpanded="True">
              <Expander.Header>
                <TextBlock
                  Margin="7,0,0,0"
                  VerticalAlignment="Center"
                  Text="{Binding AddressBookListName}" />
              </Expander.Header>
              <Expander.Resources>
                <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="White" />
                <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="White" />
                <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="Gray" />
                <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="White" />
                <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="White" />
                <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="Gray" />
                <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="White" />
                <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="White" />
                <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="Gray" />
                <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="White" />
                <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="White" />
                <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="Gray" />
                <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                          <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="Auto" />
                              <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                              <Grid.LayoutTransform>
                                <TransformGroup>
                                  <TransformGroup.Children>
                                    <TransformCollection>
                                      <RotateTransform Angle="-90" />
                                    </TransformCollection>
                                  </TransformGroup.Children>
                                </TransformGroup>
                              </Grid.LayoutTransform>
                              <Ellipse
                                x:Name="circle"
                                Width="19"
                                Height="19"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{StaticResource Expander.Static.Circle.Fill}"
                                Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                              <Path
                                x:Name="arrow"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M -2,1.5 L -0.5,4 L 1,1.5 Z"
                                SnapsToDevicePixels="false"
                                Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                StrokeThickness="3" />
                            </Grid>
                            <ContentPresenter
                              Grid.Column="1"
                              Margin="4,4,0,0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="True" />
                          </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M -0.5,1.5 L -2.5,2.75 L -0.5, 4 Z" />
                          </Trigger>
                          <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
                          </Trigger>
                          <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
                          </Trigger>
                          <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
                          </Trigger>-->
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Expander.Resources>

              <Expander.Template>
                <ControlTemplate TargetType="{x:Type Expander}">
                  <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3"
                    SnapsToDevicePixels="true">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <ToggleButton
                        x:Name="HeaderSite"
                        MinWidth="0"
                        MinHeight="0"
                        Margin="1"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="Left"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource ExpanderRightHeaderStyle}">
                        <ToggleButton.FocusVisualStyle>
                          <Style>
                            <Setter Property="Control.Template">
                              <Setter.Value>
                                <ControlTemplate>
                                  <Border>
                                    <Rectangle
                                      Margin="0"
                                      SnapsToDevicePixels="true"
                                      Stroke="Black"
                                      StrokeDashArray="1 2"
                                      StrokeThickness="1" />
                                  </Border>
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </Style>
                        </ToggleButton.FocusVisualStyle>
                      </ToggleButton>
                      <ContentPresenter
                        x:Name="ExpandSite"
                        Grid.Row="1"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="false"
                        Visibility="Collapsed" />
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsExpanded" Value="true">
                      <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Expander.Template>
              <ListBox
                MaxHeight="400"
                Margin="20,0,10,0"
                VerticalAlignment="Top"
                BorderThickness="0"
                ItemsSource="{Binding AddressBookList}">
                <ListBox.ItemTemplate>
                  <DataTemplate DataType="{x:Type model:ContactsListingModel}">
                    <StackPanel Orientation="Horizontal">
                      <Image
                        Width="30"
                        Height="30"
                        Source="{Binding ImagePath}" />
                      <TextBlock
                        Margin="5"
                        Text="{Binding Name}"
                        TextAlignment="Center" />
                    </StackPanel>
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
            </Expander>
          </StackPanel>

          <!--<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">Hello World</TextBlock>-->
        </TabItem>
        <TabItem HorizontalAlignment="Stretch" Header="RM! Updates">
          <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">Material Design</TextBlock>
        </TabItem>



      </dragablz:TabablzControl>
      <Button
        x:Name="Logout"
        Grid.Row="3"
        Margin="10"
        Command="{Binding LogoutCommand}"
        Content="LOG OUT"
        FontSize="18" />

      <!--<GroupBox
      Grid.Row="2"
      Margin="10,10,10,0"
      Header="Contacts:">
      <DataGrid
        AutoGenerateColumns="False"
        IsReadOnly="True"
        ItemsSource="{Binding ContactsList}"
        SelectedItem="{Binding SelectedContact}"
        SelectionUnit="FullRow">
        <DataGrid.CellStyle>
          <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0" />
          </Style>
        </DataGrid.CellStyle>
        <DataGrid.Columns>
          <DataGridTextColumn Width="3*" Header="Contacts">
            <DataGridTextColumn.Binding>
              <MultiBinding Converter="{StaticResource NameConverter}" ConverterParameter="FormatFirstLast">
                <Binding Path="FirstName" />
                <Binding Path="LastName" />
              </MultiBinding>
            </DataGridTextColumn.Binding>

          </DataGridTextColumn>
          <DataGridTemplateColumn Width="*" Header="Mail">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image
                  Width="20"
                  Height="20"
                  Source="pack://application:,,,/ChatApp;component/Resources/Icon.ico" />
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        </DataGrid.Columns>
      </DataGrid>
    </GroupBox>
    <Button
      x:Name="Logout"
      Grid.Row="3"
      Margin="10"
      Command="{Binding LogoutCommand}"
      Content="LOG OUT"
      FontSize="18" />-->

      <!--<Grid
                Grid.Row="2"
                Grid.Column="0"
                Margin="20,0,10,20">
                <Rectangle
                    Fill="AliceBlue"
                    RadiusX="10"
                    RadiusY="10"
                    Stroke="#1E98F7"
                    StrokeThickness="1" />
      -->
      <!--<Image Source="pack://application:,,,/ChatApp;component/Resources/ChatBubble.png"
               Width="500"
               Height="30"/>-->
      <!--
                <TextBox
                    x:Name="MessageBox"
                    Margin="10,0,30,10"
                    Padding="0,0,50,0"
                    BorderBrush="Gray"
                    FontSize="18"
                    Foreground="Black"
                    Text="{Binding MessageBoxContent, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="Wrap">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SendCommand}" />
                    </TextBox.InputBindings>
                </TextBox>
                <Image
                    Width="20"
                    Height="50"
                    Margin="10,0"
                    HorizontalAlignment="Right"
                    Source="pack://application:,,,/ChatApp;component/Resources/SendImage.png" />
                <Button
                    Width="40"
                    Height="30"
                    HorizontalAlignment="Right"
                    Background="Transparent"
                    BorderThickness="0"
                    Command="{Binding SendCommand}" />

                <materialDesign:HintAssist.Hint>
                    <TextBlock Foreground="Gray">Write your message here...</TextBlock>
                </materialDesign:HintAssist.Hint>
            </Grid>-->

      <!--<Border BorderThickness="1"
              BorderBrush="AliceBlue"
              Grid.Row="2"
              Grid.Column="0"
              Margin="10, 10, 10, 0">
        <TextBox
            Text="Write your message here.."
            FontSize="18" />
      </Border>-->
    </Grid>
  </Grid>
</UserControl>
